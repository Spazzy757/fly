dumper:
  image:
    repository: vlabresearch/dumper
    tag: 0.0.1
    pullPolicy: IfNotPresent

  completions: 1
  parallelism: 1
  backoffLimit: 8

  schedule: "0 */2 * * *"
  resources:
    requests:
      cpu: 100m
      memory: 256Mi

  keySecret: gbv-dumper-keys
  env:
  - name: CHATBASE_HOST
    value: "gbv-cockroachdb-public.default"
  - name: DUMPER_LOCATION
    value: "gs://vlab-research-backups/gbv-india/"


naughtybot:
  image:
    repository: vlabresearch/naughtybot
    tag: 0.0.7
    pullPolicy: IfNotPresent

  env:
  - name: CHATBASE_BACKEND
    value: "@vlab-research/chatbase-postgres"
  - name: CHATBASE_DATABASE
    value: "chatroach"
  - name: CHATBASE_USER
    value: "chatroach"
  - name: CHATBASE_PASSWORD
    value: ""
  - name: CHATBASE_HOST
    value: "gbv-cockroachdb-public.default"
  - name: CHATBASE_PORT
    value: "26257"
  - name: BOTSPINE_KAFKA_BROKERS
    value: "gbv-kafka:9092"
  - name: BOTSPINE_MESSAGE_TOPIC
    value: "chat-events"
  - name: BOTSERVER_URL
    value: "http://gbv-botserver"

  writer:
    replicaCount: 6
    resources:
      requests:
        cpu: 10m
        memory: 64Mi

  dean:
    schedule: "*/1 * * * *"
    resources:
      requests:
        cpu: 10m
        memory: 64Mi


linksniffer:
  replicaCount: 3

  image:
    repository: vlabresearch/linksniffer
    tag: 0.0.3
    pullPolicy: IfNotPresent

  env:
  - name: BOTSERVER_URL
    value: "http://gbv-botserver/synthetic"
  - name: FB_PAGE_ID
    value: "1855355231229529"

  resources:
    requests:
      cpu: 10m
      memory: 50Mi

  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: gbvlinks.nandan.cloud
        paths:
          - "/"
    tls:
      - secretName: gbv-linksniffer-cert
        hosts:
          - gbvlinks.nandan.cloud

  service:
    type: ClusterIP
    port: 80

dashboard:
  replicaCount: 3

  image:
    repository: vlabresearch/dashboard
    tag: 0.0.4
    pullPolicy: IfNotPresent

  envFrom: gbv-bot-envs
  env:
    - name: TYPEFORM_URL
      value: 'https://api.typeform.com'
    - name: CUBEJS_API_SECRET
      value: 'notasecret'
    - name: CUBEJS_DB_TYPE
      value: 'postgres'
    - name: DB_DATABASE
      value: 'chatroach'
    - name: CUBEJS_DB_NAME
      value: 'chatroach'
    - name: DB_USER
      value: 'chatroach'
    - name: CUBEJS_DB_USER
      value: 'chatroach'
    - name: DB_PASSWORD
      value: ''
    - name: CUBEJS_DB_PASS
      value: ''
    - name: DB_HOST
      value: 'gbv-cockroachdb-public.default'
    - name: CUBEJS_DB_HOST
      value: 'gbv-cockroachdb-public.default'
    - name: DB_PORT
      value: '26257'
    - name: CUBEJS_DB_PORT
      value: '26257'
    - name: TYPEFORM_REDIRECT_URL
      value: 'https://vlab-research.netlify.com/surveys/auth'

  resources:
    requests:
      cpu: 10m
      memory: 128Mi

  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: gbv-dashboard.nandan.cloud
        paths:
          - '/'
    tls:
      - secretName: gbv-dashboard-cert
        hosts:
          - gbv-dashboard.nandan.cloud

  service:
    type: ClusterIP
    port: 80


scratchbot:
  replicaCount: 3

  image:
    repository: vlabresearch/replybot
    tag: 0.0.55
    pullPolicy: IfNotPresent

  envFrom: gbv-bot-envs

  env:
  - name: CHATBASE_BACKEND
    value: "@vlab-research/chatbase-postgres"
  - name: CHATBASE_DATABASE
    value: "chatroach"
  - name: CHATBASE_USER
    value: "chatroach"
  - name: CHATBASE_PASSWORD
    value: ""
  - name: CHATBASE_HOST
    value: "gbv-cockroachdb-public.default"
  - name: CHATBASE_PORT
    value: "26257"
  - name: FALLBACK_FORM
    value: "305"
  - name: REPLYBOT_EVENT_TOPIC
    value: "chat-events"
  - name: BOTSPINE_KAFKA_BROKERS
    value: "gbv-kafka:9092"
  - name: BOTSPINE_MESSAGE_TOPIC
    value: "chat-events"
  - name: DASHBOARD_API
    value: "http://gbv-dashboard/api/v1"

  resources:
    requests:
      cpu: 10m
      memory: 64Mi


botscribe:
  replicaCount: 3

  image:
    repository: vlabresearch/botscribe
    tag: 0.0.5
    pullPolicy: IfNotPresent

  envFrom: gbv-bot-envs

  env:
  - name: CHATBASE_BACKEND
    value: "@vlab-research/chatbase-postgres"
  - name: CHATBASE_DATABASE
    value: "chatroach"
  - name: CHATBASE_USER
    value: "chatroach"
  - name: CHATBASE_PASSWORD
    value: ""
  - name: CHATBASE_HOST
    value: "gbv-cockroachdb-public.default"
  - name: CHATBASE_PORT
    value: "26257"
  - name: BOTSCRIBE_HIGHWATER
    value: "500"
  - name: BOTSPINE_KAFKA_BROKERS
    value: "gbv-kafka:9092"
  - name: BOTSPINE_MESSAGE_TOPIC
    value: "chat-events"

  resources:
    requests:
      cpu: 10m
      memory: 64Mi


replybot:
  replicaCount: 12
  image:
    repository: vlabresearch/replybot
    tag: 0.0.55
    pullPolicy: IfNotPresent

  envFrom: gbv-bot-envs
  resources:
    requests:
      cpu: 20m
      memory: 128Mi
  env:
  - name: CHATBASE_BACKEND
    value: "@vlab-research/chatbase-postgres"
  - name: CHATBASE_DATABASE
    value: "chatroach"
  - name: CHATBASE_USER
    value: "chatroach"
  - name: CHATBASE_PASSWORD
    value: ""
  - name: CHATBASE_HOST
    value: "gbv-cockroachdb-public.default"
  - name: CHATBASE_PORT
    value: "26257"
  - name: FALLBACK_FORM
    value: "305"
  - name: REPLYBOT_EVENT_TOPIC
    value: "chat-events"
  - name: BOTSPINE_KAFKA_BROKERS
    value: "gbv-kafka:9092"
  - name: BOTSPINE_MESSAGE_TOPIC
    value: "chat-events"
  - name: DASHBOARD_API
    value: "http://gbv-dashboard/api/v1"


botserver:
  replicaCount: 3

  image:
    repository: vlabresearch/botserver
    tag: 0.0.6
    pullPolicy: IfNotPresent

  envFrom: gbv-bot-envs

  env:
  - name: BOTSERVER_EVENT_TOPIC
    value: "chat-events"
  - name: KAFKA_BROKERS
    value: "gbv-kafka:9092"

  resources:
    requests:
      cpu: 10m
      memory: 96Mi

  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: gbvbot.nandan.cloud
        paths:
          - "/"
    tls:
      - secretName: gbv-botserver-cert
        hosts:
          - gbvbot.nandan.cloud

  service:
    type: ClusterIP
    port: 80


cockroachdb:
  statefulset:
    replicas: 5
    resources:
      requests:
        cpu: 100m
        memory: 6Gi
  conf:
    cache: 4GiB
    max-sql-memory: 4GiB
    budget:
      maxUnavailable: 1
  tls:
    enabled: no
  storage:
    persistentVolume:
      size: 100Gi
      storageClass: "pd-ssd"


kafka:
  replicas: 5
  imageTag: 5.4.0
  resources:
    requests:
      cpu: 100m
      memory: 6Gi
  zookeeper:
    resources:
      requests:
        cpu: 10m
        memory: 500Mi
  kafkaHeapOptions: "-Xmx12G -Xms500M"
  configurationOverrides:
    "offsets.topic.replication.factor": 3
    "auto.create.topics.enable": false
  topics:
    - name: "chat-events"
      config: "retention.ms=2678400000" # 31 days
      partitions: 96
      replicationFactor: 3
  persistence:
    size: 100Gi
    storageClass: "pd-ssd"
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - kafka
        topologyKey: "kubernetes.io/hostname"
    podAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
       - weight: 50
         podAffinityTerm:
           labelSelector:
             matchExpressions:
             - key: app
               operator: In
               values:
                 - zookeeper
           topologyKey: "kubernetes.io/hostname"
  prometheus:
    ## Prometheus JMX Exporter: exposes the majority of Kafkas metrics
    jmx:
      enabled: true
      ## Port jmx-exporter exposes Prometheus format metrics to scrape
      port: 5556

    kafka:
      enabled: true
      ## Port kafka-exporter exposes for Prometheus to scrape metrics
      port: 9308

    operator:
      ## Are you using Prometheus Operator?
      enabled: true
      serviceMonitor:
        namespace: monitoring
        selector:
          heritage: Helm
          release: prometheus

      prometheusRule:
        ## Add Prometheus Rules?
        enabled: true
        ## Namespace in which to install the PrometheusRule resource.
        namespace: monitoring
        # Use release namespace instead
        releaseNamespace: false

        ## Defaults to whats used if you follow CoreOS [Prometheus Install Instructions](https://github.com/coreos/prometheus-operator/tree/master/helm#tldr)
        ## [Prometheus Selector Label](https://github.com/coreos/prometheus-operator/blob/master/helm/prometheus/templates/prometheus.yaml#L65)
        ## [Kube Prometheus Selector Label](https://github.com/coreos/prometheus-operator/blob/master/helm/kube-prometheus/values.yaml#L298)
        selector:
          heritage: Helm
          release: prometheus
          prometheus: null

        ## Some example rules.
        ## e.g. max(kafka_controller_kafkacontroller_activecontrollercount_value{service="my-kafka-release"}) by (service) < 1
        rules:
        - alert: KafkaNoActiveControllers
          annotations:
            message: The number of active controllers in {{ "{{" }} $labels.namespace {{ "}}" }} is less than 1. This usually means that some of the Kafka nodes aren't communicating properly. If it doesn't resolve itself you can try killing the pods (one by one whilst monitoring the under-replicated partitions graph).
          expr: max(kafka_controller_kafkacontroller_activecontrollercount_value) by (namespace) < 1
          for: 5m
          labels:
            severity: critical
        - alert: KafkaMultipleActiveControllers
          annotations:
            message: The number of active controllers in {{ "{{" }} $labels.namespace {{ "}}" }} is greater than 1. This usually means that some of the Kafka nodes aren't communicating properly. If it doesn't resolve itself you can try killing the pods (one by one whilst monitoring the under-replicated partitions graph).
          expr: max(kafka_controller_kafkacontroller_activecontrollercount_value) by (namespace) > 1
          for: 5m
          labels:
            severity: critical
